import re

def check_password_strength(password):
    # Criteria checks
    length_criteria = len(password) >= 8
    uppercase_criteria = bool(re.search(r'[A-Z]', password))
    lowercase_criteria = bool(re.search(r'[a-z]', password))
    digit_criteria = bool(re.search(r'\d', password))
    special_criteria = bool(re.search(r'[\W_]', password))  # Matches any non-alphanumeric character
    
    # Initialize strength and feedback
    strength = 0
    feedback = []
    
    # Evaluate each criteria
    if length_criteria:
        strength += 1
    else:
        feedback.append("Password should be at least 8 characters long.")
    
    if uppercase_criteria:
        strength += 1
    else:
        feedback.append("Password should contain at least one uppercase letter.")
    
    if lowercase_criteria:
        strength += 1
    else:
        feedback.append("Password should contain at least one lowercase letter.")
    
    if digit_criteria:
        strength += 1
    else:
        feedback.append("Password should contain at least one digit.")
    
    if special_criteria:
        strength += 1
    else:
        feedback.append("Password should contain at least one special character.")
    
    # Determine password strength
    if strength == 5:
        strength_level = "Strong"
    elif strength >= 3:
        strength_level = "Medium"
    else:
        strength_level = "Weak"
    
    # Provide feedback
    feedback_message = " ".join(feedback) if feedback else "Your password is strong."
    
    return strength_level, feedback_message

# Example usage
password = input("Enter a password to check its strength: ")
strength_level, feedback_message = check_password_strength(password)
print(f"Password Strength: {strength_level}")
print(f"Feedback: {feedback_message}")

